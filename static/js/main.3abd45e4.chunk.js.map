{"version":3,"sources":["сomponents/Filter/Filter.module.css","сomponents/App/App.module.css","сomponents/Alert/Alert.module.css","сomponents/ContactForm/ContactForm.module.css","сomponents/ContactForm/ContactForm.jsx","сomponents/ContactList/ContactList.jsx","сomponents/Filter/Filter.jsx","сomponents/Alert/Alert.js","сomponents/App/App.js","index.js","сomponents/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","label","htmlFor","input","type","onChange","id","button","Component","defaultProps","ContactList","contacts","onDeleteContact","TransitionGroup","component","map","CSSTransition","timeout","classNames","ContactList_item","onClick","Filter","onChangeFilter","Alert","alertBox","alert","App","filter","error","deleteContact","contactId","prevState","contact","changeFilter","formSubmitHandler","data","newContact","find","setTimeout","getFilterContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","console","log","setItem","stringify","filterContacts","container","in","appear","unmountOnExit","title","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3abd45e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1bMst\",\"input\":\"Filter_input__1uX42\",\"form\":\"Filter_form__3PKIf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3iSor\",\"title\":\"App_title__3ki6B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBox\":\"Alert_alertBox__3QORy\",\"alert\":\"Alert_alert__31MXE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__3Ai96\",\"form\":\"ContactForm_form__2C5LT\",\"input\":\"ContactForm_input__1Jph3\",\"button\":\"ContactForm_button__1u8kU\"};","import React, {Component} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid'\r\nimport s from './ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n    name: \"\",\r\n    number: \"\"\r\n    }\r\n\r\n    nameInputId = shortid.generate();\r\n    numberInputId = shortid.generate();\r\n\r\n    handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n    };\r\n    \r\n    handleSubmit = (e) => {\r\n    e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n    \r\n    reset = () => {\r\n        this.setState({name: \"\",\r\n    number: \"\"})\r\n    }\r\n    render() {\r\n        return (\r\n            < form onSubmit={this.handleSubmit} >\r\n                <div className={s.form}>\r\n                <label className={s.label} htmlFor={this.nameInputId}>\r\n                    Name\r\n              <input className={s.input}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        id={this.nameInputId}\r\n                    />\r\n                </label>\r\n                <label className={s.label} htmlFor={this.numberInputId}>\r\n                    Number\r\n              <input className={s.input}\r\n                        type=\"text\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChange}\r\n                        id={this.numberInputId}\r\n                    />\r\n                </label>\r\n                    <button className={s.button} type=\"submit\">Add contact</button>\r\n                     </div>\r\n            </form >\r\n                \r\n        );\r\n    }\r\n}\r\n\r\nContactForm.defaultProps = {\r\n    type: 'text',\r\n    name: null,\r\n};\r\n\r\nContactForm.propTypes = {\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css'\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    <TransitionGroup component='ul' className={s.ContactList}>\r\n    {contacts.map(({ id, name, number }) =>\r\n      <CSSTransition key={id} timeout={250}\r\n      classNames={s}>\r\n                <li className={s.ContactList_item} >\r\n                {name}: {number}\r\n                <button className={s.button} onClick={() => onDeleteContact(id)}>Delete</button>\r\n      </li>\r\n    </CSSTransition>)}\r\n            </TransitionGroup>\r\n    \r\n        )\r\n\r\n\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChangeFilter}) => {\r\n  return (\r\n    <div className={s.form}>\r\n          <label className={s.label} >\r\n            Find contacts by name\r\n            <input className={s.input}\r\n              type=\"text\"\r\n              value={value}\r\n              onChange={onChangeFilter}\r\n            ></input>\r\n      </label>\r\n      </div>\r\n     )\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React from 'react';\r\nimport s from './Alert.module.css';\r\n\r\nconst Alert = () => (\r\n  <div className={s.alertBox}>\r\n    <h2 className={s.alert}>Contact already exists!</h2>\r\n  </div>\r\n);\r\n\r\nexport default Alert;\r\n","import React, { Component } from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport shortid from 'shortid';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport s from './App.module.css';\nimport { CSSTransition } from 'react-transition-group';\nimport '../../css/animation.css';\nimport Alert from '../Alert/Alert';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    error: false,\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App componenetDidUpdate');\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  formSubmitHandler = data => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: shortid.generate(),\n      name: data.name,\n      number: data.number,\n    };\n\n    if (contacts.find(({ name }) => name === data.name)) {\n      this.setState(() => {\n        return {\n          error: true,\n        };\n      });\n\n      setTimeout(() => {\n        this.setState(() => {\n          return {\n            error: false,\n          };\n        });\n      }, 3000);\n    } else {\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, newContact],\n        };\n      });\n    }\n  };\n\n  getFilterContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const filterContacts = this.getFilterContacts();\n    const { filter, contacts } = this.state;\n    return (\n      <div className={s.container}>\n        <CSSTransition\n          in={this.state.error}\n          appear={true}\n          classNames=\"error\"\n          timeout={250}\n          unmountOnExit\n        >\n          <Alert />\n        </CSSTransition>\n\n        <CSSTransition in={true} appear={true} classNames=\"fade\" timeout={500}>\n          <h1 className={s.title}>Phonebook</h1>\n        </CSSTransition>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n\n        <CSSTransition\n          in={contacts.length > 1}\n          classNames=\"fade\"\n          timeout={500}\n          unmountOnExit\n        >\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        </CSSTransition>\n\n        <CSSTransition\n          in={this.state.contacts.length > 0}\n          classNames=\"fade\"\n          timeout={250}\n          unmountOnExit\n        >\n          <ContactList\n            contacts={filterContacts}\n            onDeleteContact={this.deleteContact}\n          />\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './сomponents/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2Nw3T\",\"ContactList_item\":\"ContactList_ContactList_item__mdB8n\",\"button\":\"ContactList_button__Z0bAy\",\"enter\":\"ContactList_enter__2px0R\",\"enterActive\":\"ContactList_enterActive__2dmnN\",\"exit\":\"ContactList_exit__3O-SG\",\"exitActive\":\"ContactList_exitActive__fBmCO\"};"],"sourceRoot":""}